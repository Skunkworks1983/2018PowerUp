plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.03.06"
}

repositories {
    mavenCentral()

//    flatDir {
//        dirs "libs"
//    }
}

wpi {
    ctreVersion = '5.3.1.0'
}

dependencies {
    compile wpilib()
    compile ctre()
    compile navx()

    compile "com.fasterxml.jackson.core:jackson-core:2.6.1"
    compile "com.fasterxml.jackson.core:jackson-core:2.9.4"
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.1"
    compile "junit:junit:4.12"
    compile "org.apache.logging.log4j:log4j-core:2.10.0"
    compile "org.hamcrest:hamcrest-all:1.3"
    compile "org.mockito:mockito-all:1.10.19"
    compile "org.powermock:powermock-api-mockito:1.7.1"
    compile "org.powermock:powermock-module-junit4:1.7.1"
}

def TEAM = 1983
def ROBOT_CLASS = "frc.team1983.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}


// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}

sourceSets {
    main.java.srcDirs += 'src'
}